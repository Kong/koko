syntax = "proto3";

package kong.admin.service.v1;

option go_package = "github.com/kong/koko/internal/gen/kong/admin/service/v1;v1";

import "google/api/annotations.proto";
import "kong/admin/model/v1/route.proto";
import "kong/admin/model/v1/cluster.proto";
import "kong/admin/model/v1/pagination.proto";

service RouteService {
  rpc GetRoute(GetRouteRequest) returns (GetRouteResponse) {
    option (google.api.http) = {
      get: "/v1/routes/{id}"
    };
  }
  rpc CreateRoute(CreateRouteRequest) returns (CreateRouteResponse) {
    option (google.api.http) = {
      post: "/v1/routes"
      body: "item"
    };
  }
  rpc UpsertRoute(UpsertRouteRequest) returns (UpsertRouteResponse) {
    option (google.api.http) = {
      put: "/v1/routes/{item.id}"
      body: "item"
    };
  }
  rpc DeleteRoute(DeleteRouteRequest) returns (DeleteRouteResponse) {
    option (google.api.http) = {
      delete: "/v1/routes/{id}"
    };
  }
  rpc ListRoutes(ListRoutesRequest) returns (ListRoutesResponse) {
    option (google.api.http) = {
      get: "/v1/routes"
    };
  }
}

message GetRouteRequest{
  string id = 1;
  model.v1.RequestCluster cluster = 2;
}

message GetRouteResponse{
  model.v1.Route item = 1;
}

message CreateRouteRequest{
  model.v1.Route item = 1;
  model.v1.RequestCluster cluster = 2;
}

message CreateRouteResponse{
  model.v1.Route item = 1;
}

message UpsertRouteRequest{
  model.v1.Route item = 1;
  model.v1.RequestCluster cluster = 2;
}

message UpsertRouteResponse{
  model.v1.Route item = 1;
}

message DeleteRouteRequest{
  string id = 1;
  model.v1.RequestCluster cluster = 2;
}

message DeleteRouteResponse{
}

message ListRoutesRequest{
  model.v1.RequestCluster cluster = 1;
  string service_id = 2;
  model.v1.PaginationRequest page = 3;
}

message ListRoutesResponse{
  repeated model.v1.Route items = 1;
  model.v1.PaginationResponse page = 2;
}
