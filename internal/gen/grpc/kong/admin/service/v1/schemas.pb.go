// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        (unknown)
// source: kong/admin/service/v1/schemas.proto

package v1

import (
	v1 "github.com/kong/koko/internal/gen/grpc/kong/admin/model/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetSchemasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetSchemasRequest) Reset() {
	*x = GetSchemasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSchemasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemasRequest) ProtoMessage() {}

func (x *GetSchemasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemasRequest.ProtoReflect.Descriptor instead.
func (*GetSchemasRequest) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{0}
}

func (x *GetSchemasRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetSchemasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema *structpb.Struct `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *GetSchemasResponse) Reset() {
	*x = GetSchemasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSchemasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemasResponse) ProtoMessage() {}

func (x *GetSchemasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemasResponse.ProtoReflect.Descriptor instead.
func (*GetSchemasResponse) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{1}
}

func (x *GetSchemasResponse) GetSchema() *structpb.Struct {
	if x != nil {
		return x.Schema
	}
	return nil
}

type GetLuaSchemasPluginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cluster *v1.RequestCluster `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *GetLuaSchemasPluginRequest) Reset() {
	*x = GetLuaSchemasPluginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLuaSchemasPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLuaSchemasPluginRequest) ProtoMessage() {}

func (x *GetLuaSchemasPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLuaSchemasPluginRequest.ProtoReflect.Descriptor instead.
func (*GetLuaSchemasPluginRequest) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{2}
}

func (x *GetLuaSchemasPluginRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetLuaSchemasPluginRequest) GetCluster() *v1.RequestCluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type GetLuaSchemasPluginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema *structpb.Struct `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *GetLuaSchemasPluginResponse) Reset() {
	*x = GetLuaSchemasPluginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLuaSchemasPluginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLuaSchemasPluginResponse) ProtoMessage() {}

func (x *GetLuaSchemasPluginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLuaSchemasPluginResponse.ProtoReflect.Descriptor instead.
func (*GetLuaSchemasPluginResponse) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{3}
}

func (x *GetLuaSchemasPluginResponse) GetSchema() *structpb.Struct {
	if x != nil {
		return x.Schema
	}
	return nil
}

type ValidateLuaPluginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1.Plugin `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ValidateLuaPluginRequest) Reset() {
	*x = ValidateLuaPluginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateLuaPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateLuaPluginRequest) ProtoMessage() {}

func (x *ValidateLuaPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateLuaPluginRequest.ProtoReflect.Descriptor instead.
func (*ValidateLuaPluginRequest) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{4}
}

func (x *ValidateLuaPluginRequest) GetItem() *v1.Plugin {
	if x != nil {
		return x.Item
	}
	return nil
}

type ValidateLuaPluginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateLuaPluginResponse) Reset() {
	*x = ValidateLuaPluginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateLuaPluginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateLuaPluginResponse) ProtoMessage() {}

func (x *ValidateLuaPluginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateLuaPluginResponse.ProtoReflect.Descriptor instead.
func (*ValidateLuaPluginResponse) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{5}
}

type ValidateCACertificateSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1.CACertificate `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ValidateCACertificateSchemaRequest) Reset() {
	*x = ValidateCACertificateSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateCACertificateSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateCACertificateSchemaRequest) ProtoMessage() {}

func (x *ValidateCACertificateSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateCACertificateSchemaRequest.ProtoReflect.Descriptor instead.
func (*ValidateCACertificateSchemaRequest) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{6}
}

func (x *ValidateCACertificateSchemaRequest) GetItem() *v1.CACertificate {
	if x != nil {
		return x.Item
	}
	return nil
}

type ValidateCertificateSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1.Certificate `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ValidateCertificateSchemaRequest) Reset() {
	*x = ValidateCertificateSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateCertificateSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateCertificateSchemaRequest) ProtoMessage() {}

func (x *ValidateCertificateSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateCertificateSchemaRequest.ProtoReflect.Descriptor instead.
func (*ValidateCertificateSchemaRequest) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{7}
}

func (x *ValidateCertificateSchemaRequest) GetItem() *v1.Certificate {
	if x != nil {
		return x.Item
	}
	return nil
}

type ValidateConfigHashSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1.ConfigHash `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ValidateConfigHashSchemaRequest) Reset() {
	*x = ValidateConfigHashSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateConfigHashSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateConfigHashSchemaRequest) ProtoMessage() {}

func (x *ValidateConfigHashSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateConfigHashSchemaRequest.ProtoReflect.Descriptor instead.
func (*ValidateConfigHashSchemaRequest) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{8}
}

func (x *ValidateConfigHashSchemaRequest) GetItem() *v1.ConfigHash {
	if x != nil {
		return x.Item
	}
	return nil
}

type ValidateConsumerSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1.Consumer `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ValidateConsumerSchemaRequest) Reset() {
	*x = ValidateConsumerSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateConsumerSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateConsumerSchemaRequest) ProtoMessage() {}

func (x *ValidateConsumerSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateConsumerSchemaRequest.ProtoReflect.Descriptor instead.
func (*ValidateConsumerSchemaRequest) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{9}
}

func (x *ValidateConsumerSchemaRequest) GetItem() *v1.Consumer {
	if x != nil {
		return x.Item
	}
	return nil
}

type ValidateNodeSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1.Node `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ValidateNodeSchemaRequest) Reset() {
	*x = ValidateNodeSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateNodeSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateNodeSchemaRequest) ProtoMessage() {}

func (x *ValidateNodeSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateNodeSchemaRequest.ProtoReflect.Descriptor instead.
func (*ValidateNodeSchemaRequest) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{10}
}

func (x *ValidateNodeSchemaRequest) GetItem() *v1.Node {
	if x != nil {
		return x.Item
	}
	return nil
}

type ValidatePluginSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item    *v1.Plugin         `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Cluster *v1.RequestCluster `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *ValidatePluginSchemaRequest) Reset() {
	*x = ValidatePluginSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatePluginSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatePluginSchemaRequest) ProtoMessage() {}

func (x *ValidatePluginSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatePluginSchemaRequest.ProtoReflect.Descriptor instead.
func (*ValidatePluginSchemaRequest) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{11}
}

func (x *ValidatePluginSchemaRequest) GetItem() *v1.Plugin {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *ValidatePluginSchemaRequest) GetCluster() *v1.RequestCluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type ValidateRouteSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1.Route `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ValidateRouteSchemaRequest) Reset() {
	*x = ValidateRouteSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateRouteSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateRouteSchemaRequest) ProtoMessage() {}

func (x *ValidateRouteSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateRouteSchemaRequest.ProtoReflect.Descriptor instead.
func (*ValidateRouteSchemaRequest) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{12}
}

func (x *ValidateRouteSchemaRequest) GetItem() *v1.Route {
	if x != nil {
		return x.Item
	}
	return nil
}

type ValidateServiceSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1.Service `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ValidateServiceSchemaRequest) Reset() {
	*x = ValidateServiceSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateServiceSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateServiceSchemaRequest) ProtoMessage() {}

func (x *ValidateServiceSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateServiceSchemaRequest.ProtoReflect.Descriptor instead.
func (*ValidateServiceSchemaRequest) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{13}
}

func (x *ValidateServiceSchemaRequest) GetItem() *v1.Service {
	if x != nil {
		return x.Item
	}
	return nil
}

type ValidateSNISchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1.SNI `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ValidateSNISchemaRequest) Reset() {
	*x = ValidateSNISchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateSNISchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSNISchemaRequest) ProtoMessage() {}

func (x *ValidateSNISchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSNISchemaRequest.ProtoReflect.Descriptor instead.
func (*ValidateSNISchemaRequest) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{14}
}

func (x *ValidateSNISchemaRequest) GetItem() *v1.SNI {
	if x != nil {
		return x.Item
	}
	return nil
}

type ValidateTargetSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1.Target `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ValidateTargetSchemaRequest) Reset() {
	*x = ValidateTargetSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateTargetSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTargetSchemaRequest) ProtoMessage() {}

func (x *ValidateTargetSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateTargetSchemaRequest.ProtoReflect.Descriptor instead.
func (*ValidateTargetSchemaRequest) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{15}
}

func (x *ValidateTargetSchemaRequest) GetItem() *v1.Target {
	if x != nil {
		return x.Item
	}
	return nil
}

type ValidateUpstreamSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1.Upstream `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ValidateUpstreamSchemaRequest) Reset() {
	*x = ValidateUpstreamSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateUpstreamSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateUpstreamSchemaRequest) ProtoMessage() {}

func (x *ValidateUpstreamSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateUpstreamSchemaRequest.ProtoReflect.Descriptor instead.
func (*ValidateUpstreamSchemaRequest) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{16}
}

func (x *ValidateUpstreamSchemaRequest) GetItem() *v1.Upstream {
	if x != nil {
		return x.Item
	}
	return nil
}

type ValidateCACertificateSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateCACertificateSchemaResponse) Reset() {
	*x = ValidateCACertificateSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateCACertificateSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateCACertificateSchemaResponse) ProtoMessage() {}

func (x *ValidateCACertificateSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateCACertificateSchemaResponse.ProtoReflect.Descriptor instead.
func (*ValidateCACertificateSchemaResponse) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{17}
}

type ValidateCertificateSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateCertificateSchemaResponse) Reset() {
	*x = ValidateCertificateSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateCertificateSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateCertificateSchemaResponse) ProtoMessage() {}

func (x *ValidateCertificateSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateCertificateSchemaResponse.ProtoReflect.Descriptor instead.
func (*ValidateCertificateSchemaResponse) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{18}
}

type ValidateConfigHashSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateConfigHashSchemaResponse) Reset() {
	*x = ValidateConfigHashSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateConfigHashSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateConfigHashSchemaResponse) ProtoMessage() {}

func (x *ValidateConfigHashSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateConfigHashSchemaResponse.ProtoReflect.Descriptor instead.
func (*ValidateConfigHashSchemaResponse) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{19}
}

type ValidateConsumerSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateConsumerSchemaResponse) Reset() {
	*x = ValidateConsumerSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateConsumerSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateConsumerSchemaResponse) ProtoMessage() {}

func (x *ValidateConsumerSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateConsumerSchemaResponse.ProtoReflect.Descriptor instead.
func (*ValidateConsumerSchemaResponse) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{20}
}

type ValidateNodeSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateNodeSchemaResponse) Reset() {
	*x = ValidateNodeSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateNodeSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateNodeSchemaResponse) ProtoMessage() {}

func (x *ValidateNodeSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateNodeSchemaResponse.ProtoReflect.Descriptor instead.
func (*ValidateNodeSchemaResponse) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{21}
}

type ValidatePluginSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidatePluginSchemaResponse) Reset() {
	*x = ValidatePluginSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatePluginSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatePluginSchemaResponse) ProtoMessage() {}

func (x *ValidatePluginSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatePluginSchemaResponse.ProtoReflect.Descriptor instead.
func (*ValidatePluginSchemaResponse) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{22}
}

type ValidateRouteSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateRouteSchemaResponse) Reset() {
	*x = ValidateRouteSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateRouteSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateRouteSchemaResponse) ProtoMessage() {}

func (x *ValidateRouteSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateRouteSchemaResponse.ProtoReflect.Descriptor instead.
func (*ValidateRouteSchemaResponse) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{23}
}

type ValidateServiceSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateServiceSchemaResponse) Reset() {
	*x = ValidateServiceSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateServiceSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateServiceSchemaResponse) ProtoMessage() {}

func (x *ValidateServiceSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateServiceSchemaResponse.ProtoReflect.Descriptor instead.
func (*ValidateServiceSchemaResponse) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{24}
}

type ValidateSNISchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateSNISchemaResponse) Reset() {
	*x = ValidateSNISchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateSNISchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSNISchemaResponse) ProtoMessage() {}

func (x *ValidateSNISchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSNISchemaResponse.ProtoReflect.Descriptor instead.
func (*ValidateSNISchemaResponse) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{25}
}

type ValidateTargetSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateTargetSchemaResponse) Reset() {
	*x = ValidateTargetSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateTargetSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTargetSchemaResponse) ProtoMessage() {}

func (x *ValidateTargetSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateTargetSchemaResponse.ProtoReflect.Descriptor instead.
func (*ValidateTargetSchemaResponse) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{26}
}

type ValidateUpstreamSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateUpstreamSchemaResponse) Reset() {
	*x = ValidateUpstreamSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateUpstreamSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateUpstreamSchemaResponse) ProtoMessage() {}

func (x *ValidateUpstreamSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kong_admin_service_v1_schemas_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateUpstreamSchemaResponse.ProtoReflect.Descriptor instead.
func (*ValidateUpstreamSchemaResponse) Descriptor() ([]byte, []int) {
	return file_kong_admin_service_v1_schemas_proto_rawDescGZIP(), []int{27}
}

var File_kong_admin_service_v1_schemas_proto protoreflect.FileDescriptor

var file_kong_admin_service_v1_schemas_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61,
	0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x25, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6b, 0x6f, 0x6e, 0x67, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6b, 0x6f,
	0x6e, 0x67, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x61, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6e, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x27, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x6f, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x4c, 0x75, 0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a,
	0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x4e, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x4c, 0x75, 0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x4b, 0x0a, 0x18,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x75, 0x61, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x1b, 0x0a, 0x19, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x75, 0x61, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c, 0x0a, 0x22, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x41, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6b, 0x6f, 0x6e,
	0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x41, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x22, 0x58, 0x0a, 0x20, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x56,
	0x0a, 0x1f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x48, 0x61, 0x73, 0x68, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x33, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x61, 0x73, 0x68,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x52, 0x0a, 0x1d, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x4a, 0x0a, 0x19, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x8d, 0x01, 0x0a, 0x1b, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x4c, 0x0a, 0x1a, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x22, 0x50, 0x0a, 0x1c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x48, 0x0a, 0x18, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x4e, 0x49, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4e, 0x49, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x22, 0x4e, 0x0a, 0x1b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2f, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x22, 0x52, 0x0a, 0x1d, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x31, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x22, 0x25, 0x0a, 0x23, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x41, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x22, 0x0a, 0x20, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x48, 0x61, 0x73, 0x68, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x4e, 0x49, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x20, 0x0a, 0x1e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0xec, 0x10, 0x0a, 0x0e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa6, 0x01, 0x0a, 0x11, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x75, 0x61, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x2f, 0x2e, 0x6b,
	0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x75, 0x61,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x75,
	0x61, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x20, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x6c, 0x75, 0x61, 0x2f, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12,
	0xcc, 0x01, 0x0a, 0x1b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x41, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x39, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x41, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6b, 0x6f, 0x6e,
	0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x41, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x3a, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x22, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x73, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2f, 0x63, 0x61, 0x2d, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0xc3,
	0x01, 0x0a, 0x19, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x37, 0x2e, 0x6b,
	0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x25, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2f,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x12, 0xb7, 0x01, 0x0a, 0x16, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x34, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x22, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0xaf,
	0x01, 0x0a, 0x14, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x32, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6b, 0x6f,
	0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x20,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x6a, 0x73, 0x6f, 0x6e,
	0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x12, 0xab, 0x01, 0x0a, 0x13, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x31, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6b, 0x6f,
	0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x1f, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2f,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0xb3,
	0x01, 0x0a, 0x15, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x33, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x22, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x6a,
	0x73, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x12, 0xa3, 0x01, 0x0a, 0x11, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x4e, 0x49, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x2f, 0x2e, 0x6b, 0x6f, 0x6e,
	0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x4e, 0x49, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6b, 0x6f,
	0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x4e, 0x49, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x1d, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2f, 0x73, 0x6e,
	0x69, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0xaf, 0x01, 0x0a, 0x14, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x12, 0x32, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x28, 0x3a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0xb7, 0x01, 0x0a,
	0x16, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x34, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x22, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f,
	0x6a, 0x73, 0x6f, 0x6e, 0x2f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x73, 0x12, 0x28, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x21, 0x62, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x7d, 0x12, 0xac, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x75, 0x61, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x73, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x31, 0x2e, 0x6b, 0x6f,
	0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x75, 0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x73, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32,
	0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x75, 0x61, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x73, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x62, 0x06, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f,
	0x6c, 0x75, 0x61, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d,
	0x65, 0x7d, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x6b, 0x6f, 0x6b, 0x6f, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kong_admin_service_v1_schemas_proto_rawDescOnce sync.Once
	file_kong_admin_service_v1_schemas_proto_rawDescData = file_kong_admin_service_v1_schemas_proto_rawDesc
)

func file_kong_admin_service_v1_schemas_proto_rawDescGZIP() []byte {
	file_kong_admin_service_v1_schemas_proto_rawDescOnce.Do(func() {
		file_kong_admin_service_v1_schemas_proto_rawDescData = protoimpl.X.CompressGZIP(file_kong_admin_service_v1_schemas_proto_rawDescData)
	})
	return file_kong_admin_service_v1_schemas_proto_rawDescData
}

var file_kong_admin_service_v1_schemas_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_kong_admin_service_v1_schemas_proto_goTypes = []interface{}{
	(*GetSchemasRequest)(nil),                   // 0: kong.admin.service.v1.GetSchemasRequest
	(*GetSchemasResponse)(nil),                  // 1: kong.admin.service.v1.GetSchemasResponse
	(*GetLuaSchemasPluginRequest)(nil),          // 2: kong.admin.service.v1.GetLuaSchemasPluginRequest
	(*GetLuaSchemasPluginResponse)(nil),         // 3: kong.admin.service.v1.GetLuaSchemasPluginResponse
	(*ValidateLuaPluginRequest)(nil),            // 4: kong.admin.service.v1.ValidateLuaPluginRequest
	(*ValidateLuaPluginResponse)(nil),           // 5: kong.admin.service.v1.ValidateLuaPluginResponse
	(*ValidateCACertificateSchemaRequest)(nil),  // 6: kong.admin.service.v1.ValidateCACertificateSchemaRequest
	(*ValidateCertificateSchemaRequest)(nil),    // 7: kong.admin.service.v1.ValidateCertificateSchemaRequest
	(*ValidateConfigHashSchemaRequest)(nil),     // 8: kong.admin.service.v1.ValidateConfigHashSchemaRequest
	(*ValidateConsumerSchemaRequest)(nil),       // 9: kong.admin.service.v1.ValidateConsumerSchemaRequest
	(*ValidateNodeSchemaRequest)(nil),           // 10: kong.admin.service.v1.ValidateNodeSchemaRequest
	(*ValidatePluginSchemaRequest)(nil),         // 11: kong.admin.service.v1.ValidatePluginSchemaRequest
	(*ValidateRouteSchemaRequest)(nil),          // 12: kong.admin.service.v1.ValidateRouteSchemaRequest
	(*ValidateServiceSchemaRequest)(nil),        // 13: kong.admin.service.v1.ValidateServiceSchemaRequest
	(*ValidateSNISchemaRequest)(nil),            // 14: kong.admin.service.v1.ValidateSNISchemaRequest
	(*ValidateTargetSchemaRequest)(nil),         // 15: kong.admin.service.v1.ValidateTargetSchemaRequest
	(*ValidateUpstreamSchemaRequest)(nil),       // 16: kong.admin.service.v1.ValidateUpstreamSchemaRequest
	(*ValidateCACertificateSchemaResponse)(nil), // 17: kong.admin.service.v1.ValidateCACertificateSchemaResponse
	(*ValidateCertificateSchemaResponse)(nil),   // 18: kong.admin.service.v1.ValidateCertificateSchemaResponse
	(*ValidateConfigHashSchemaResponse)(nil),    // 19: kong.admin.service.v1.ValidateConfigHashSchemaResponse
	(*ValidateConsumerSchemaResponse)(nil),      // 20: kong.admin.service.v1.ValidateConsumerSchemaResponse
	(*ValidateNodeSchemaResponse)(nil),          // 21: kong.admin.service.v1.ValidateNodeSchemaResponse
	(*ValidatePluginSchemaResponse)(nil),        // 22: kong.admin.service.v1.ValidatePluginSchemaResponse
	(*ValidateRouteSchemaResponse)(nil),         // 23: kong.admin.service.v1.ValidateRouteSchemaResponse
	(*ValidateServiceSchemaResponse)(nil),       // 24: kong.admin.service.v1.ValidateServiceSchemaResponse
	(*ValidateSNISchemaResponse)(nil),           // 25: kong.admin.service.v1.ValidateSNISchemaResponse
	(*ValidateTargetSchemaResponse)(nil),        // 26: kong.admin.service.v1.ValidateTargetSchemaResponse
	(*ValidateUpstreamSchemaResponse)(nil),      // 27: kong.admin.service.v1.ValidateUpstreamSchemaResponse
	(*structpb.Struct)(nil),                     // 28: google.protobuf.Struct
	(*v1.RequestCluster)(nil),                   // 29: kong.admin.model.v1.RequestCluster
	(*v1.Plugin)(nil),                           // 30: kong.admin.model.v1.Plugin
	(*v1.CACertificate)(nil),                    // 31: kong.admin.model.v1.CACertificate
	(*v1.Certificate)(nil),                      // 32: kong.admin.model.v1.Certificate
	(*v1.ConfigHash)(nil),                       // 33: kong.admin.model.v1.ConfigHash
	(*v1.Consumer)(nil),                         // 34: kong.admin.model.v1.Consumer
	(*v1.Node)(nil),                             // 35: kong.admin.model.v1.Node
	(*v1.Route)(nil),                            // 36: kong.admin.model.v1.Route
	(*v1.Service)(nil),                          // 37: kong.admin.model.v1.Service
	(*v1.SNI)(nil),                              // 38: kong.admin.model.v1.SNI
	(*v1.Target)(nil),                           // 39: kong.admin.model.v1.Target
	(*v1.Upstream)(nil),                         // 40: kong.admin.model.v1.Upstream
}
var file_kong_admin_service_v1_schemas_proto_depIdxs = []int32{
	28, // 0: kong.admin.service.v1.GetSchemasResponse.schema:type_name -> google.protobuf.Struct
	29, // 1: kong.admin.service.v1.GetLuaSchemasPluginRequest.cluster:type_name -> kong.admin.model.v1.RequestCluster
	28, // 2: kong.admin.service.v1.GetLuaSchemasPluginResponse.schema:type_name -> google.protobuf.Struct
	30, // 3: kong.admin.service.v1.ValidateLuaPluginRequest.item:type_name -> kong.admin.model.v1.Plugin
	31, // 4: kong.admin.service.v1.ValidateCACertificateSchemaRequest.item:type_name -> kong.admin.model.v1.CACertificate
	32, // 5: kong.admin.service.v1.ValidateCertificateSchemaRequest.item:type_name -> kong.admin.model.v1.Certificate
	33, // 6: kong.admin.service.v1.ValidateConfigHashSchemaRequest.item:type_name -> kong.admin.model.v1.ConfigHash
	34, // 7: kong.admin.service.v1.ValidateConsumerSchemaRequest.item:type_name -> kong.admin.model.v1.Consumer
	35, // 8: kong.admin.service.v1.ValidateNodeSchemaRequest.item:type_name -> kong.admin.model.v1.Node
	30, // 9: kong.admin.service.v1.ValidatePluginSchemaRequest.item:type_name -> kong.admin.model.v1.Plugin
	29, // 10: kong.admin.service.v1.ValidatePluginSchemaRequest.cluster:type_name -> kong.admin.model.v1.RequestCluster
	36, // 11: kong.admin.service.v1.ValidateRouteSchemaRequest.item:type_name -> kong.admin.model.v1.Route
	37, // 12: kong.admin.service.v1.ValidateServiceSchemaRequest.item:type_name -> kong.admin.model.v1.Service
	38, // 13: kong.admin.service.v1.ValidateSNISchemaRequest.item:type_name -> kong.admin.model.v1.SNI
	39, // 14: kong.admin.service.v1.ValidateTargetSchemaRequest.item:type_name -> kong.admin.model.v1.Target
	40, // 15: kong.admin.service.v1.ValidateUpstreamSchemaRequest.item:type_name -> kong.admin.model.v1.Upstream
	4,  // 16: kong.admin.service.v1.SchemasService.ValidateLuaPlugin:input_type -> kong.admin.service.v1.ValidateLuaPluginRequest
	6,  // 17: kong.admin.service.v1.SchemasService.ValidateCACertificateSchema:input_type -> kong.admin.service.v1.ValidateCACertificateSchemaRequest
	7,  // 18: kong.admin.service.v1.SchemasService.ValidateCertificateSchema:input_type -> kong.admin.service.v1.ValidateCertificateSchemaRequest
	9,  // 19: kong.admin.service.v1.SchemasService.ValidateConsumerSchema:input_type -> kong.admin.service.v1.ValidateConsumerSchemaRequest
	11, // 20: kong.admin.service.v1.SchemasService.ValidatePluginSchema:input_type -> kong.admin.service.v1.ValidatePluginSchemaRequest
	12, // 21: kong.admin.service.v1.SchemasService.ValidateRouteSchema:input_type -> kong.admin.service.v1.ValidateRouteSchemaRequest
	13, // 22: kong.admin.service.v1.SchemasService.ValidateServiceSchema:input_type -> kong.admin.service.v1.ValidateServiceSchemaRequest
	14, // 23: kong.admin.service.v1.SchemasService.ValidateSNISchema:input_type -> kong.admin.service.v1.ValidateSNISchemaRequest
	15, // 24: kong.admin.service.v1.SchemasService.ValidateTargetSchema:input_type -> kong.admin.service.v1.ValidateTargetSchemaRequest
	16, // 25: kong.admin.service.v1.SchemasService.ValidateUpstreamSchema:input_type -> kong.admin.service.v1.ValidateUpstreamSchemaRequest
	0,  // 26: kong.admin.service.v1.SchemasService.GetSchemas:input_type -> kong.admin.service.v1.GetSchemasRequest
	2,  // 27: kong.admin.service.v1.SchemasService.GetLuaSchemasPlugin:input_type -> kong.admin.service.v1.GetLuaSchemasPluginRequest
	5,  // 28: kong.admin.service.v1.SchemasService.ValidateLuaPlugin:output_type -> kong.admin.service.v1.ValidateLuaPluginResponse
	17, // 29: kong.admin.service.v1.SchemasService.ValidateCACertificateSchema:output_type -> kong.admin.service.v1.ValidateCACertificateSchemaResponse
	18, // 30: kong.admin.service.v1.SchemasService.ValidateCertificateSchema:output_type -> kong.admin.service.v1.ValidateCertificateSchemaResponse
	20, // 31: kong.admin.service.v1.SchemasService.ValidateConsumerSchema:output_type -> kong.admin.service.v1.ValidateConsumerSchemaResponse
	22, // 32: kong.admin.service.v1.SchemasService.ValidatePluginSchema:output_type -> kong.admin.service.v1.ValidatePluginSchemaResponse
	23, // 33: kong.admin.service.v1.SchemasService.ValidateRouteSchema:output_type -> kong.admin.service.v1.ValidateRouteSchemaResponse
	24, // 34: kong.admin.service.v1.SchemasService.ValidateServiceSchema:output_type -> kong.admin.service.v1.ValidateServiceSchemaResponse
	25, // 35: kong.admin.service.v1.SchemasService.ValidateSNISchema:output_type -> kong.admin.service.v1.ValidateSNISchemaResponse
	26, // 36: kong.admin.service.v1.SchemasService.ValidateTargetSchema:output_type -> kong.admin.service.v1.ValidateTargetSchemaResponse
	27, // 37: kong.admin.service.v1.SchemasService.ValidateUpstreamSchema:output_type -> kong.admin.service.v1.ValidateUpstreamSchemaResponse
	1,  // 38: kong.admin.service.v1.SchemasService.GetSchemas:output_type -> kong.admin.service.v1.GetSchemasResponse
	3,  // 39: kong.admin.service.v1.SchemasService.GetLuaSchemasPlugin:output_type -> kong.admin.service.v1.GetLuaSchemasPluginResponse
	28, // [28:40] is the sub-list for method output_type
	16, // [16:28] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_kong_admin_service_v1_schemas_proto_init() }
func file_kong_admin_service_v1_schemas_proto_init() {
	if File_kong_admin_service_v1_schemas_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kong_admin_service_v1_schemas_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSchemasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSchemasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLuaSchemasPluginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLuaSchemasPluginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateLuaPluginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateLuaPluginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateCACertificateSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateCertificateSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateConfigHashSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateConsumerSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateNodeSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatePluginSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateRouteSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateServiceSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateSNISchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateTargetSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateUpstreamSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateCACertificateSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateCertificateSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateConfigHashSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateConsumerSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateNodeSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatePluginSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateRouteSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateServiceSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateSNISchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateTargetSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kong_admin_service_v1_schemas_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateUpstreamSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kong_admin_service_v1_schemas_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kong_admin_service_v1_schemas_proto_goTypes,
		DependencyIndexes: file_kong_admin_service_v1_schemas_proto_depIdxs,
		MessageInfos:      file_kong_admin_service_v1_schemas_proto_msgTypes,
	}.Build()
	File_kong_admin_service_v1_schemas_proto = out.File
	file_kong_admin_service_v1_schemas_proto_rawDesc = nil
	file_kong_admin_service_v1_schemas_proto_goTypes = nil
	file_kong_admin_service_v1_schemas_proto_depIdxs = nil
}
