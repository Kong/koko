// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: kong/model/config.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormatVersion  string           `protobuf:"bytes,1,opt,name=format_version,json=_format_version,proto3" json:"format_version,omitempty"`
	Services       []*Service       `protobuf:"bytes,2,rep,name=services,proto3" json:"services,omitempty"`
	Routes         []*Route         `protobuf:"bytes,3,rep,name=routes,proto3" json:"routes,omitempty"`
	Consumers      []*Consumer      `protobuf:"bytes,4,rep,name=consumers,proto3" json:"consumers,omitempty"`
	Plugins        []*Plugin        `protobuf:"bytes,5,rep,name=plugins,proto3" json:"plugins,omitempty"`
	Upstreams      []*Upstream      `protobuf:"bytes,6,rep,name=upstreams,proto3" json:"upstreams,omitempty"`
	Targets        []*Target        `protobuf:"bytes,7,rep,name=targets,proto3" json:"targets,omitempty"`
	Certificates   []*Certificate   `protobuf:"bytes,8,rep,name=certificates,proto3" json:"certificates,omitempty"`
	Snis           []*SNI           `protobuf:"bytes,9,rep,name=snis,proto3" json:"snis,omitempty"`
	CaCertificates []*CACertificate `protobuf:"bytes,10,rep,name=ca_certificates,json=caCertificates,proto3" json:"ca_certificates,omitempty"`
	PluginData     *PluginData      `protobuf:"bytes,11,opt,name=plugin_data,json=pluginData,proto3" json:"plugin_data,omitempty"`
	Workspaces     []*Workspace     `protobuf:"bytes,12,rep,name=workspaces,proto3" json:"workspaces,omitempty"`
	Parameters     []*Parameter     `protobuf:"bytes,13,rep,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kong_model_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_kong_model_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_kong_model_config_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetFormatVersion() string {
	if x != nil {
		return x.FormatVersion
	}
	return ""
}

func (x *Config) GetServices() []*Service {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *Config) GetRoutes() []*Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *Config) GetConsumers() []*Consumer {
	if x != nil {
		return x.Consumers
	}
	return nil
}

func (x *Config) GetPlugins() []*Plugin {
	if x != nil {
		return x.Plugins
	}
	return nil
}

func (x *Config) GetUpstreams() []*Upstream {
	if x != nil {
		return x.Upstreams
	}
	return nil
}

func (x *Config) GetTargets() []*Target {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *Config) GetCertificates() []*Certificate {
	if x != nil {
		return x.Certificates
	}
	return nil
}

func (x *Config) GetSnis() []*SNI {
	if x != nil {
		return x.Snis
	}
	return nil
}

func (x *Config) GetCaCertificates() []*CACertificate {
	if x != nil {
		return x.CaCertificates
	}
	return nil
}

func (x *Config) GetPluginData() *PluginData {
	if x != nil {
		return x.PluginData
	}
	return nil
}

func (x *Config) GetWorkspaces() []*Workspace {
	if x != nil {
		return x.Workspaces
	}
	return nil
}

func (x *Config) GetParameters() []*Parameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

var File_kong_model_config_proto protoreflect.FileDescriptor

var file_kong_model_config_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6b, 0x6f, 0x6e, 0x67, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x1f, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2f, 0x63, 0x61, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1a, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x6b, 0x6f, 0x6e,
	0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x6e, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1a, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9e,
	0x05, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x27, 0x0a, 0x0e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x32,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x12, 0x32, 0x0a, 0x09, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x09, 0x75, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x23, 0x0a, 0x04, 0x73, 0x6e, 0x69, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x4e, 0x49, 0x52, 0x04,
	0x73, 0x6e, 0x69, 0x73, 0x12, 0x42, 0x0a, 0x0f, 0x63, 0x61, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x41, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x63, 0x61, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x0b, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x35, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x6f, 0x6e, 0x67, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x0a, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b,
	0x6f, 0x6e, 0x67, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42,
	0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f,
	0x6e, 0x67, 0x2f, 0x6b, 0x6f, 0x6b, 0x6f, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x77, 0x72, 0x70, 0x63, 0x2f, 0x6b, 0x6f, 0x6e, 0x67, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x3b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_kong_model_config_proto_rawDescOnce sync.Once
	file_kong_model_config_proto_rawDescData = file_kong_model_config_proto_rawDesc
)

func file_kong_model_config_proto_rawDescGZIP() []byte {
	file_kong_model_config_proto_rawDescOnce.Do(func() {
		file_kong_model_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_kong_model_config_proto_rawDescData)
	})
	return file_kong_model_config_proto_rawDescData
}

var file_kong_model_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_kong_model_config_proto_goTypes = []interface{}{
	(*Config)(nil),        // 0: kong.model.Config
	(*Service)(nil),       // 1: kong.model.Service
	(*Route)(nil),         // 2: kong.model.Route
	(*Consumer)(nil),      // 3: kong.model.Consumer
	(*Plugin)(nil),        // 4: kong.model.Plugin
	(*Upstream)(nil),      // 5: kong.model.Upstream
	(*Target)(nil),        // 6: kong.model.Target
	(*Certificate)(nil),   // 7: kong.model.Certificate
	(*SNI)(nil),           // 8: kong.model.SNI
	(*CACertificate)(nil), // 9: kong.model.CACertificate
	(*PluginData)(nil),    // 10: kong.model.PluginData
	(*Workspace)(nil),     // 11: kong.model.Workspace
	(*Parameter)(nil),     // 12: kong.model.Parameter
}
var file_kong_model_config_proto_depIdxs = []int32{
	1,  // 0: kong.model.Config.services:type_name -> kong.model.Service
	2,  // 1: kong.model.Config.routes:type_name -> kong.model.Route
	3,  // 2: kong.model.Config.consumers:type_name -> kong.model.Consumer
	4,  // 3: kong.model.Config.plugins:type_name -> kong.model.Plugin
	5,  // 4: kong.model.Config.upstreams:type_name -> kong.model.Upstream
	6,  // 5: kong.model.Config.targets:type_name -> kong.model.Target
	7,  // 6: kong.model.Config.certificates:type_name -> kong.model.Certificate
	8,  // 7: kong.model.Config.snis:type_name -> kong.model.SNI
	9,  // 8: kong.model.Config.ca_certificates:type_name -> kong.model.CACertificate
	10, // 9: kong.model.Config.plugin_data:type_name -> kong.model.PluginData
	11, // 10: kong.model.Config.workspaces:type_name -> kong.model.Workspace
	12, // 11: kong.model.Config.parameters:type_name -> kong.model.Parameter
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_kong_model_config_proto_init() }
func file_kong_model_config_proto_init() {
	if File_kong_model_config_proto != nil {
		return
	}
	file_kong_model_ca_certificate_proto_init()
	file_kong_model_certificate_proto_init()
	file_kong_model_consumer_proto_init()
	file_kong_model_parameter_proto_init()
	file_kong_model_plugin_proto_init()
	file_kong_model_plugin_entities_proto_init()
	file_kong_model_route_proto_init()
	file_kong_model_service_proto_init()
	file_kong_model_sni_proto_init()
	file_kong_model_target_proto_init()
	file_kong_model_upstream_proto_init()
	file_kong_model_workspace_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kong_model_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kong_model_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kong_model_config_proto_goTypes,
		DependencyIndexes: file_kong_model_config_proto_depIdxs,
		MessageInfos:      file_kong_model_config_proto_msgTypes,
	}.Build()
	File_kong_model_config_proto = out.File
	file_kong_model_config_proto_rawDesc = nil
	file_kong_model_config_proto_goTypes = nil
	file_kong_model_config_proto_depIdxs = nil
}
