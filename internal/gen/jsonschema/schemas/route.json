{
  "required": [
    "id",
    "protocols"
  ],
  "properties": {
    "destinations": {
      "items": {
        "properties": {
          "ip": {
            "type": "string",
            "anyOf": [
              {
                "pattern": "^([0-9]{1,3}[.]{1}){3}[0-9]{1,3}$",
                "description": "must be a valid IP or CIDR"
              },
              {
                "pattern": "^([0-9]{1,3}[.]{1}){3}[0-9]{1,3}/[0-9]{1,3}$",
                "description": "must be a valid IP or CIDR"
              }
            ]
          },
          "port": {
            "maximum": 65535,
            "minimum": 1,
            "type": "integer"
          }
        },
        "type": "object",
        "oneOf": [
          {
            "required": [
              "ip"
            ],
            "description": "either one of 'ip' or 'port' is required"
          },
          {
            "required": [
              "port"
            ],
            "description": "either one of 'ip' or 'port' is required"
          }
        ]
      },
      "type": "array"
    },
    "headers": {
      "patternProperties": {
        "^[A-Za-z0-9!#$%\u0026'*+-.^_|~]+$": {
          "properties": {
            "values": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "^[Hh][Oo][Ss][Tt]$": {
          "not": {
            "description": "must not contain 'host' header"
          }
        }
      },
      "type": "object"
    },
    "hosts": {
      "items": {
        "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
        "type": "string",
        "description": "must be a valid hostname"
      },
      "type": "array"
    },
    "https_redirect_status_code": {
      "enum": [
        426,
        301,
        302,
        307,
        308
      ],
      "type": "integer"
    },
    "id": {
      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
      "type": "string",
      "description": "must be a valid UUID"
    },
    "methods": {
      "items": {
        "pattern": "^[A-Z]+$",
        "type": "string"
      },
      "type": "array"
    },
    "name": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "^[0-9a-zA-Z.-_~]*$",
      "type": "string"
    },
    "path_handling": {
      "enum": [
        "v0",
        "v1"
      ],
      "type": "string"
    },
    "paths": {
      "items": {
        "type": "string",
        "allOf": [
          {
            "pattern": "^/.*",
            "description": "must begin with `/`"
          },
          {
            "not": {
              "pattern": "//",
              "description": "must not contain `//`"
            }
          }
        ]
      },
      "type": "array"
    },
    "preserve_host": {
      "type": "boolean"
    },
    "protocols": {
      "items": {
        "enum": [
          "http",
          "https",
          "grpc",
          "grpcs",
          "tcp",
          "udp",
          "tls"
        ],
        "type": "string"
      },
      "type": "array",
      "anyOf": [
        {
          "items": {
            "enum": [
              "http",
              "https"
            ],
            "type": "string"
          },
          "description": "must contain only one subset [ http https ]"
        },
        {
          "items": {
            "enum": [
              "tcp",
              "udp",
              "tls"
            ],
            "type": "string"
          },
          "description": "must contain only one subset [ tcp udp tls ]"
        },
        {
          "items": {
            "enum": [
              "grpc",
              "grpcs"
            ],
            "type": "string"
          },
          "description": "must contain only one subset [ grpc grpcs ]"
        }
      ]
    },
    "regex_priority": {
      "exclusiveMinimum": -1,
      "type": "integer"
    },
    "request_buffering": {
      "type": "boolean"
    },
    "response_buffering": {
      "type": "boolean"
    },
    "snis": {
      "items": {
        "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
        "type": "string",
        "description": "must be a valid hostname"
      },
      "type": "array"
    },
    "sources": {
      "items": {
        "properties": {
          "ip": {
            "type": "string",
            "anyOf": [
              {
                "pattern": "^([0-9]{1,3}[.]{1}){3}[0-9]{1,3}$",
                "description": "must be a valid IP or CIDR"
              },
              {
                "pattern": "^([0-9]{1,3}[.]{1}){3}[0-9]{1,3}/[0-9]{1,3}$",
                "description": "must be a valid IP or CIDR"
              }
            ]
          },
          "port": {
            "maximum": 65535,
            "minimum": 1,
            "type": "integer"
          }
        },
        "type": "object",
        "oneOf": [
          {
            "required": [
              "ip"
            ],
            "description": "either one of 'ip' or 'port' is required"
          },
          {
            "required": [
              "port"
            ],
            "description": "either one of 'ip' or 'port' is required"
          }
        ]
      },
      "type": "array"
    },
    "strip_path": {
      "type": "boolean"
    },
    "tags": {
      "items": {
        "maxLength": 128,
        "minLength": 1,
        "pattern": "^[0-9a-zA-Z.-_~]*$",
        "type": "string"
      },
      "maxItems": 8,
      "type": "array"
    }
  },
  "type": "object",
  "allOf": [
    {
      "description": "'snis' can be set only when protocols has one of 'https', 'grpcs' or 'tls'",
      "if": {
        "required": [
          "snis"
        ]
      },
      "then": {
        "properties": {
          "protocols": {
            "contains": {
              "oneOf": [
                {
                  "type": "string",
                  "const": "https"
                },
                {
                  "type": "string",
                  "const": "grpcs"
                },
                {
                  "type": "string",
                  "const": "tls"
                }
              ]
            }
          }
        }
      }
    },
    {
      "description": "when protocols has 'http' or 'https', 'sources' or 'destinations' cannot be set",
      "if": {
        "required": [
          "protocols"
        ],
        "properties": {
          "protocols": {
            "contains": {
              "anyOf": [
                {
                  "type": "string",
                  "const": "https"
                },
                {
                  "type": "string",
                  "const": "http"
                }
              ]
            }
          }
        }
      },
      "then": {
        "properties": {
          "destinations": {
            "not": {}
          },
          "sources": {
            "not": {
              "description": "when protocols has 'http' or 'https', 'sources' or 'destination' cannot be set"
            }
          }
        }
      }
    },
    {
      "description": "when protocols has 'http', at least one of 'hosts', 'methods', 'paths' or 'headers' must be set",
      "if": {
        "required": [
          "protocols"
        ],
        "properties": {
          "protocols": {
            "contains": {
              "const": "http"
            }
          }
        }
      },
      "then": {
        "anyOf": [
          {
            "required": [
              "methods"
            ]
          },
          {
            "required": [
              "hosts"
            ]
          },
          {
            "required": [
              "paths"
            ]
          },
          {
            "required": [
              "paths"
            ]
          },
          {
            "required": [
              "headers"
            ]
          }
        ]
      }
    },
    {
      "description": "when protocols has 'https', at least one of 'snis', 'hosts', 'methods', 'paths' or 'headers' must be set",
      "if": {
        "required": [
          "protocols"
        ],
        "properties": {
          "protocols": {
            "contains": {
              "const": "https"
            }
          }
        }
      },
      "then": {
        "anyOf": [
          {
            "required": [
              "methods"
            ]
          },
          {
            "required": [
              "hosts"
            ]
          },
          {
            "required": [
              "paths"
            ]
          },
          {
            "required": [
              "paths"
            ]
          },
          {
            "required": [
              "headers"
            ]
          },
          {
            "required": [
              "snis"
            ]
          }
        ]
      }
    },
    {
      "description": "when protocol has 'tcp', 'tls' or 'udp', 'methods', 'hosts', 'paths', 'headers' cannot be set",
      "if": {
        "required": [
          "protocols"
        ],
        "properties": {
          "protocols": {
            "contains": {
              "anyOf": [
                {
                  "type": "string",
                  "const": "tcp"
                },
                {
                  "type": "string",
                  "const": "udp"
                },
                {
                  "type": "string",
                  "const": "tls"
                }
              ]
            }
          }
        }
      },
      "then": {
        "properties": {
          "headers": {
            "not": {}
          },
          "hosts": {
            "not": {}
          },
          "methods": {
            "not": {}
          },
          "paths": {
            "not": {}
          }
        }
      }
    },
    {
      "description": "when protocols has 'tcp', 'tls' or 'udp', then at least one of 'sources', 'destinations' or 'snis' must be set",
      "if": {
        "required": [
          "protocols"
        ],
        "properties": {
          "protocols": {
            "contains": {
              "anyOf": [
                {
                  "type": "string",
                  "const": "tcp"
                },
                {
                  "type": "string",
                  "const": "udp"
                },
                {
                  "type": "string",
                  "const": "tls"
                }
              ]
            }
          }
        }
      },
      "then": {
        "anyOf": [
          {
            "required": [
              "sources"
            ]
          },
          {
            "required": [
              "destinations"
            ]
          },
          {
            "required": [
              "snis"
            ]
          }
        ]
      }
    },
    {
      "description": "when protocol has 'grpc' or 'grpcs', 'strip_path', 'methods', 'sources', 'destinations' cannot be set",
      "if": {
        "required": [
          "protocols"
        ],
        "properties": {
          "protocols": {
            "contains": {
              "anyOf": [
                {
                  "type": "string",
                  "const": "grpc"
                },
                {
                  "type": "string",
                  "const": "grpcs"
                }
              ]
            }
          }
        }
      },
      "then": {
        "properties": {
          "destinations": {
            "not": {}
          },
          "methods": {
            "not": {}
          },
          "sources": {
            "not": {}
          },
          "strip_path": {
            "not": {
              "const": true
            }
          }
        }
      }
    },
    {
      "description": "when protocols has 'grpc', at least one of 'hosts', 'headers' or 'paths' must be set",
      "if": {
        "required": [
          "protocols"
        ],
        "properties": {
          "protocols": {
            "contains": {
              "const": "grpc"
            }
          }
        }
      },
      "then": {
        "anyOf": [
          {
            "required": [
              "hosts"
            ]
          },
          {
            "required": [
              "headers"
            ]
          },
          {
            "required": [
              "paths"
            ]
          }
        ]
      }
    },
    {
      "description": "when protocols has 'grpcs', at least one of 'hosts', 'headers', 'paths' or 'snis' must be set",
      "if": {
        "required": [
          "protocols"
        ],
        "properties": {
          "protocols": {
            "contains": {
              "const": "grpcs"
            }
          }
        }
      },
      "then": {
        "anyOf": [
          {
            "required": [
              "hosts"
            ]
          },
          {
            "required": [
              "headers"
            ]
          },
          {
            "required": [
              "paths"
            ]
          },
          {
            "required": [
              "snis"
            ]
          }
        ]
      }
    }
  ]
}